---
description: REBUILD Docker stack WHEN seed data format changes TO ensure consistent database state
globs: backend/seed.ts, backend/types/*.ts
---
tags: [docker, database, seed]
priority: 1
version: 1.0.0

# Seed Data Management Rule

## Context
- When modifying seed data structure or format
- When changing database schema that affects seed data
- When updating data compression or storage methods
- When changing Redis key structures

## Requirements
- MUST delete and rebuild Docker stack when seed data format changes
- Use command: `docker compose down && docker volume rm aphorist_redis_data && docker compose up --build`
- Ensure all changes to seed data are reflected in types and schemas
- Document any breaking changes to data format in commit messages

## Examples
<example>
When changing UnifiedNode structure in seed.ts:
```bash
# Stop containers and remove volumes
docker compose down
docker volume rm aphorist_redis_data

# Rebuild and start with new seed data
docker compose up --build
```
</example>

<example type="invalid">
‚ùå Only restarting containers without removing volume:
```bash
docker compose restart
# This leaves old seed data format in Redis volume
```
</example>

## Troubleshooting
1. If seed data appears inconsistent:
   - Check Redis volume exists and is clean
   - Verify database client compression settings
   - Ensure types match between seed and server code

<critical>
- NEVER modify seed data format without rebuilding Redis volume
- ALWAYS test seeded data structure after rebuild
</critical>