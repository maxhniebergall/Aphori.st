stages:
  generate_parameter_sweep:
    cmd: python scripts/generate_parameter_sweep.py
    deps:
      - scripts/generate_parameter_sweep.py
      - scripts/configurable_generator.py
      - scripts/typescript_bridge.py
      - scripts/quality_metrics.py
      - config/investigation_config.json
    params:
      - parameter_sweeps
      - data_collection
      - logging
    outs:
      - data/raw/parameter_sweep_${timestamp}.csv
      - data/raw/parameter_sweep_${timestamp}.json
    metrics:
      - data/raw/parameter_sweep_${timestamp}_metrics.json
  
  quality_analysis:
    cmd: python scripts/quality_metrics.py --input data/raw/ --output data/processed/
    deps:
      - scripts/quality_metrics.py
      - data/raw/
    params:
      - quality_assessment
      - performance_targets
    outs:
      - data/processed/quality_analysis.csv
      - data/processed/quality_summary.json
    metrics:
      - data/processed/quality_metrics.json
  
  generate_reports:
    cmd: jupyter nbconvert --execute --to html notebooks/run_full_investigation.ipynb --output-dir reports/
    deps:
      - notebooks/run_full_investigation.ipynb
      - data/processed/quality_analysis.csv
      - data/processed/quality_summary.json
    outs:
      - reports/run_full_investigation.html
      - reports/findings/investigation_report_${timestamp}.json

# Experiment tracking configuration
experiments:
  - name: algorithm_comparison
    params:
      - parameter_sweeps.algorithms
      - parameter_sweeps.samples_per_configuration
  
  - name: threshold_optimization
    params:
      - parameter_sweeps.similarity_thresholds
      - parameter_sweeps.frequency_thresholds